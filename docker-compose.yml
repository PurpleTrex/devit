version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: devit-postgres
    environment:
      POSTGRES_DB: devit
      POSTGRES_USER: devit
      POSTGRES_PASSWORD: devit_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infrastructure/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - devit-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: devit-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - devit-network

  # MinIO S3-compatible storage
  minio:
    image: minio/minio:latest
    container_name: devit-minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: devit
      MINIO_ROOT_PASSWORD: devit_password
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - devit-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: devit-backend
    ports:
      - "8080:8080"
    environment:
      - DATABASE_URL=postgres://devit:devit_password@postgres:5432/devit
      - REDIS_URL=redis://redis:6379
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=devit
      - MINIO_SECRET_KEY=devit_password
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - RUST_LOG=debug
    depends_on:
      - postgres
      - redis
      - minio
    networks:
      - devit-network

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: devit-frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8080
      - NEXT_PUBLIC_WS_URL=ws://localhost:8080
    depends_on:
      - backend
    networks:
      - devit-network

volumes:
  postgres_data:
  redis_data:
  minio_data:

networks:
  devit-network:
    driver: bridge
